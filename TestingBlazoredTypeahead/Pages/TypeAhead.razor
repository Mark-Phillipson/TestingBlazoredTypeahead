@page "/typeahead"
@using Blazored.Typeahead
<h1> Blazored Typeahead</h1>
<EditForm Model="@People" OnValidSubmit="HandleValidSubmit">
<BlazoredTypeahead SearchMethod="GetPeopleLocal"
				   ConvertMethod="ConvertPerson"
				   @bind-Value="SelectedPersonId"
				   placeholder="Search by first name...">
	<SelectedTemplate Context="personId">
		@{
			var selectedPerson = LoadSelectedPerson(personId);

			<text>@selectedPerson?.Firstname @selectedPerson?.Lastname</text>
		}
	</SelectedTemplate>
	<ResultTemplate Context="person">
		@person.Firstname @person.Lastname (Id: @person.Id)
	</ResultTemplate>
</BlazoredTypeahead>
</EditForm>
@code {
	public int? SelectedPersonId { get; set; }
	private List<Person> People = new List<Person>();

	protected override void OnInitialized()
	{
		People.AddRange(new List<Person>() {
			new Person() { Id = 1, Firstname = "Martelle", Lastname = "Cullon" },
			new Person() { Id = 2, Firstname = "Zelda", Lastname = "Abrahamsson" },
			new Person() { Id = 3, Firstname = "Benedetta", Lastname = "Posse" }
		});
	}

	private async Task<IEnumerable<Person>> GetPeopleLocal(string searchText)
	{
		return await Task.FromResult(People.Where(x => x.Firstname.ToLower().Contains(searchText.ToLower())).ToList());
	}

	private int? ConvertPerson(Person person) => person?.Id;

	private Person LoadSelectedPerson(int? id) => People.FirstOrDefault(p => p.Id == id);


	public class Person
	{
		public int Id { get; set; }
		public string Firstname { get; set; }
		public string Lastname { get; set; }
	}

	private void HandleValidSubmit()
	{

	}

}